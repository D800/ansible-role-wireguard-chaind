#jinja2: lstrip_blocks:"True",trim_blocks:"True"
{# Copyright (C) 2018-2024 Robert Wimmer
 # SPDX-License-Identifier: GPL-3.0-or-later
 #}
# {{ ansible_managed }}

[Interface]
# {{ inventory_hostname }}
{% if wireguard_address is defined %}
Address = {{ wireguard_address }}
{% endif %}
{% if wireguard_addresses is defined %}
{%  for wg_addr in wireguard_addresses %}
Address = {{ wg_addr }}
{%  endfor %}
{% endif %}
PrivateKey = {{ wireguard_private_key }}
{% if wireguard_endpoint is defined and wireguard_endpoint != "" %}
ListenPort = {{ wireguard_port }}
{% endif %}
{% if wireguard_dns is defined %}
DNS = {{ wireguard_dns }}
{% endif %}
{% if wireguard_fwmark is defined %}
FwMark = {{ wireguard_fwmark }}
{% endif %}
{% if wireguard_mtu is defined %}
MTU = {{ wireguard_mtu }}
{% endif %}
{% if wireguard_table is defined %}
Table = {{ wireguard_table }}
{% endif %}
{% if wireguard_preup is defined %}
{% for wg_preup in wireguard_preup %}
PreUp = {{ wg_preup }}
{% endfor %}
{% endif %}
{% if wireguard_postup is defined %}
{% for wg_postup in wireguard_postup %}
PostUp = {{ wg_postup }}
{% endfor %}
{% endif %}
{% if wireguard_predown is defined %}
{% for wg_predown in wireguard_predown %}
PreDown = {{ wg_predown }}
{% endfor %}
{% endif %}
{% if wireguard_postdown is defined %}
{% for wg_postdown in wireguard_postdown %}
PostDown = {{ wg_postdown }}
{% endfor %}
{% endif %}
{% if wireguard_save_config is defined %}
SaveConfig = {{ wireguard_save_config }}
{% endif %}
# wireguard_chain_index: {{ wireguard_chain_index }}
{% for host in ansible_play_hosts %}
{%   if host != inventory_hostname and hostvars[host].wireguard_chain_index is defined and ((hostvars[host].wireguard_chain_index | int - wireguard_chain_index | int ) | abs == 1  ) %}
[Peer]
# Name = {{ host }} chain_index {{ hostvars[host].wireguard_chain_index }}
PublicKey = {{hostvars[host].wireguard__fact_public_key}}
{#     решаем ниже или выше #}
{%     if ((hostvars[host].wireguard_chain_index | int - wireguard_chain_index | int ) >= 1  ) %}
{%       set all_chain_cidrs = [] %}
{%       for chain_host in ansible_play_hosts %}
# {{ chain_host }} index {{ hostvars[chain_host].wireguard_chain_index }} ниже
# all_chain_cidrs at the begining {{ all_chain_cidrs }}
# allowed_ips {{ hostvars[chain_host].wireguard_allowed_ips | default('not defined') }} addresses {{ hostvars[chain_host].wireguard_addresses | default('not defined') }} address {{ hostvars[chain_host].wireguard_address | default('not defined') }}
{%         if ((hostvars[chain_host].wireguard_chain_index | int - wireguard_chain_index | int ) >= 1  ) %}
{%           if hostvars[chain_host].wireguard_allowed_ips is defined %}
# >= 1 allowed_ips {{ hostvars[chain_host].wireguard_allowed_ips }}
{%             set ips = hostvars[chain_host].wireguard_allowed_ips
                 .split(',')
                 | map('trim')
                 | list %}
# >= 1 ips: {{ ips | default('some erorr') }}  all_chain_cidrs {{ all_chain_cidrs | default('some erorr') }}  
{%             set all_chain_cidrs = all_chain_cidrs + ips %}
# >= 1 ips: {{ ips | default('some erorr') }}  all_chain_cidrs + ips {{ all_chain_cidrs | default('some erorr') }} 
{%           endif %}
{%           if hostvars[chain_host].wireguard_addresses is defined %}
{%             for wg_addr_g in hostvars[chain_host].wireguard_addresses %}
{%               if (wg_addr_g | ansible.utils.ipv4) %}
{%                 set all_chain_cidrs = all_chain_cidrs + [ wg_addr_g.split('/')[0] ~ '/32' ] %}
{%               elif (wg_addr_g | ansible.utils.ipv6) %}
{%                 set all_chain_cidrs = all_chain_cidrs + [ wg_addr_g.split('/')[0] ~ '/128' ] %}
{%               endif %}
{%             endfor %}
{%           endif %}
{%           if hostvars[chain_host].wireguard_address is defined %}
{%             if (hostvars[chain_host].wireguard_address | ansible.utils.ipv4) %}
{%               set all_chain_cidrs = all_chain_cidrs + [ hostvars[chain_host].wireguard_address.split('/')[0] ~ '/32' ] %}
{%             elif (hostvars[chain_host].wireguard_address | ansible.utils.ipv6) %}
{%               set all_chain_cidrs = all_chain_cidrs + [ hostvars[chain_host].wireguard_address.split('/')[0] ~ '/128' ] %}
{%             endif %}
{%           endif %}
{%         endif %}
{%       endfor %}
# all_chain_cidrs after all ifs {{ all_chain_cidrs }}
{%       set unique_cidrs = all_chain_cidrs | unique %}
AllowedIPs = {{ unique_cidrs | join(', ') }} 
{#     случай когда ниже по цепочке end #}
{%     elif ((hostvars[host].wireguard_chain_index | int - wireguard_chain_index | int ) <= -1  )%}
{#     случай когда выше по цепочке #}
{%       set all_chain_cidrs = [] %}
{%       for chain_host in ansible_play_hosts %}
# {{ chain_host }} index {{ hostvars[chain_host].wireguard_chain_index }} выше
# all_chain_cidrs at the begining {{ all_chain_cidrs }}
# allowed_ips {{ hostvars[chain_host].wireguard_allowed_ips | default('not defined') }} addresses {{ hostvars[chain_host].wireguard_addresses | default('not defined') }} address {{ hostvars[chain_host].wireguard_address | default('not defined') }}
{%         if ((hostvars[chain_host].wireguard_chain_index | int - wireguard_chain_index | int ) <= -1  ) %}
# <= -1 allowed_ips {{ hostvars[chain_host].wireguard_allowed_ips }}
{%           if hostvars[chain_host].wireguard_allowed_ips is defined %}
{%             set ips = hostvars[chain_host].wireguard_allowed_ips
                 .split(',')
                 | map('trim')
                 | list %}
# <= -1 ips: {{ ips | default('some erorr') }} all_chain_cidrs {{ all_chain_cidrs | default('some erorr') }}   
{%             set all_chain_cidrs = all_chain_cidrs + ips %}
# <= -1 ips: {{ ips | default('some erorr') }}  all_chain_cidrs + ips {{ all_chain_cidrs | default('some erorr') }}
{%           endif %}
{%           if hostvars[chain_host].wireguard_addresses is defined %}
{%             for wg_addr_g in hostvars[chain_host].wireguard_addresses %}
{%               if (wg_addr_g | ansible.utils.ipv4) %}
{%                 set all_chain_cidrs = all_chain_cidrs + [ wg_addr_g.split('/')[0] ~ '/32' ] %}
{%               elif (wg_addr_g | ansible.utils.ipv6) %}
{%                 set all_chain_cidrs = all_chain_cidrs + [ wg_addr_g.split('/')[0] ~ '/128' ] %}
{%               endif %}
{%             endfor %}
{%           endif %}
{%           if hostvars[chain_host].wireguard_address is defined %}
{%             if (hostvars[chain_host].wireguard_address | ansible.utils.ipv4) %}
{%               set all_chain_cidrs = all_chain_cidrs + [ hostvars[chain_host].wireguard_address.split('/')[0] ~ '/32' ] %}
{%             elif (hostvars[chain_host].wireguard_address | ansible.utils.ipv6) %}
{%               set all_chain_cidrs = all_chain_cidrs + [ hostvars[chain_host].wireguard_address.split('/')[0] ~ '/128' ] %}
{%             endif %}
{%           endif %}
{%         endif %}
{%       endfor %}
# all_chain_cidrs after all ifs {{ all_chain_cidrs }}
{%       set unique_cidrs = all_chain_cidrs | unique %}
AllowedIPs = {{ unique_cidrs | join(', ') }}
{#     случай когда выше по цепочке end #}
{%     endif %}
{#     решаем ниже или выше end #}
{%     if hostvars[host].wireguard_persistent_keepalive is defined and hostvars[host].wireguard_endpoint is defined and hostvars[host].wireguard_endpoint != "" %}
PersistentKeepalive = {{hostvars[host].wireguard_persistent_keepalive}}
{%     endif %}
{%     if (
         hostvars[host].wireguard_dc is defined and
         wireguard_dc is defined and
         wireguard_dc['name'] != hostvars[host].wireguard_dc['name']
       )
%}
Endpoint = {{hostvars[host].wireguard_dc['endpoint']}}:{{hostvars[host].wireguard_dc['port']}}
{%     elif hostvars[host].wireguard_port is defined %}
{%       if hostvars[host].wireguard_endpoint is defined and hostvars[host].wireguard_endpoint != "" %}
Endpoint = {{hostvars[host].wireguard_endpoint}}:{{hostvars[host].wireguard_port}}
{%       else %}
Endpoint = {{host}}:{{hostvars[host].wireguard_port}}
{%       endif %}
{%     elif hostvars[host].wireguard_endpoint is defined %}
{%       if hostvars[host].wireguard_endpoint != "" %}
Endpoint = {{hostvars[host].wireguard_endpoint}}:{{wireguard_port}}
{%       else %}
# No endpoint defined for this peer
{%       endif %}
{%     else %}
Endpoint = {{host}}:{{wireguard_port}}
{%     endif %}
{%   endif %}
{% endfor %}


{% if wireguard_unmanaged_peers is defined %}
# Peers not managed by Ansible from "wireguard_unmanaged_peers" variable
{% for peer in wireguard_unmanaged_peers.keys() %}
[Peer]
# Name = {{ peer }}
PublicKey = {{ wireguard_unmanaged_peers[peer].public_key }}
{%     if wireguard_unmanaged_peers[peer].preshared_key is defined %}
PresharedKey = {{ wireguard_unmanaged_peers[peer].preshared_key }}
{%     endif %}
{%     if wireguard_unmanaged_peers[peer].allowed_ips is defined %}
AllowedIPs = {{ wireguard_unmanaged_peers[peer].allowed_ips }}
{%     endif %}
{%     if wireguard_unmanaged_peers[peer].endpoint is defined %}
Endpoint = {{ wireguard_unmanaged_peers[peer].endpoint }}
{%     endif %}
{%     if wireguard_unmanaged_peers[peer].persistent_keepalive is defined %}
PersistentKeepalive = {{ wireguard_unmanaged_peers[peer].persistent_keepalive }}
{%     endif %}
{%   endfor %}
{% endif %}
